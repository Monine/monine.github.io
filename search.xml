<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[HTML5 跨域通信 API - window.postMessage()]]></title>
      <url>https://monine.github.io/2016/08/06/postMessage/</url>
      <content type="html"><![CDATA[<blockquote>
<p>最近遇到一个可以说是非常头疼的问题，微信的 API 在 <code>iframe</code> 框架内无法调用，然后因为业务需求又必须解决这个问题。查阅相关资料发现在 <code>iframe</code> 框架内使用 <code>window.parent.wx.xxx()</code> 可以调用微信 API 方法，但是！！！如果当前页面与嵌入的 <code>iframe</code> 框架不在同一域名<strong>（跨域）</strong>情况下，这尼玛简直就是坑爹的需求！</p>
</blockquote>
<a id="more"></a>
<h2 id="———-遇到问题-———"><a href="#———-遇到问题-———" class="headerlink" title="——— 遇到问题 ———"></a>——— 遇到问题 ———</h2><p>好在哥还算是比较机智的少年，再加上有我军哥的引导，发现 HTML5 的新 API <code>window.postMessage()</code> 貌似是能够解决俺这个问题的。So.. 随即进行一系列研究测试。</p>
<h3 id="—-参考-—"><a href="#—-参考-—" class="headerlink" title="— 参考 —"></a><em>— 参考 —</em></h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage" target="_blank" rel="external">MDN - Window.postMessage()</a></p>
<h3 id="—-Syntax-—"><a href="#—-Syntax-—" class="headerlink" title="— Syntax —"></a><em>— Syntax —</em></h3><blockquote>
<p><code>otherWindow.postMessage(message, targetOrigin, [transfer])</code></p>
</blockquote>
<ul>
<li><code>message</code> 你要发送的信息（字符串和对象都可以）</li>
<li><code>targetOrigin</code> 你要发送信息的目标域名</li>
<li><code>transfer</code> 可选参数，具体啥意思还没做深入了解，也暂时都还没用到过。</li>
</ul>
<p>MDN 介绍的 <code>window.postMessage()</code> 是针对在一个页面使用 <code>window.open()</code> 动态打开新的页面而进行的跨域通信，非常详细，Demo 也很实用，但是对我而言貌似还欠缺什么东西。</p>
<h3 id="—-Tips-—"><a href="#—-Tips-—" class="headerlink" title="— Tips —"></a><em>— Tips —</em></h3><p>在 <code>var targetPage = window.open(&#39;http://target.com&#39;)</code> 打开新页面之后需要等到 <code>http://target.com</code> 页面加载完成之后才能进行 <code>postMessage</code> 跨域通信，但是在跨域的情况下我们是无法对 <code>targetPage</code> 进行 <code>onload</code> 事件监听的，所以这里只能做 延迟 <code>setTimeout</code> 或者 定时 <code>setInterval</code> 处理。<br>同样的，在页面内嵌入 <code>iframe</code> 页面的情况下，我们也需要等到页面内的 <code>iframe</code> 加载完成之后进行 <code>postMessage</code> 跨域通信。</p>
<p>缕缕思路，写了一些小 Demo，使用 <code>window.open()</code> 动态打开新的页面使用 <code>postMessage</code> 跨域通信是 OK 的（<a href="#———-干货代码-———">干货代码</a>），但是在页面内嵌入 <code>iframe</code> 还是实现不了，Chrome Console 内经常这样报错：</p>
<blockquote>
<p>Failed to execute ‘postMessage’ on ‘DOMWindow’: The target origin provided (‘<a href="http://192.168.198.157:8000" target="_blank" rel="external">http://192.168.198.157:8000</a>‘) does not match the recipient window’s origin (‘<a href="http://192.168.198.157:3000" target="_blank" rel="external">http://192.168.198.157:3000</a>‘).</p>
</blockquote>
<h3 id="—-PS-—"><a href="#—-PS-—" class="headerlink" title="— PS —"></a><em>— PS —</em></h3><p>PageA &gt;&gt; <a href="http://192.168.198.157:8000" target="_blank" rel="external">http://192.168.198.157:8000</a><br>PageB &gt;&gt; <a href="http://192.168.198.157:3000" target="_blank" rel="external">http://192.168.198.157:3000</a><br><strong>PageA  页面内嵌入 <code>iframe</code> PageB</strong></p>
<h2 id="———-思考思考-———"><a href="#———-思考思考-———" class="headerlink" title="——— 思考思考 ———"></a>——— 思考思考 ———</h2><p>半个小时都没有解决，这个时候觉得应该放一放，再仔细思考思考是哪里出问题了，一定是有没弄明白的地方，然后也 Google 了许多资料详细查看，讲讲思路吧。</p>
<ul>
<li>解决问题要从问题源头出发，我现在遇到的问题归根究底就是两个不同域名的页面如何进行通信？</li>
<li>浏览器的同源政策不允许跨域，然而 HTML5 API <code>window.postMessage()</code> 就是用来实现跨域通信的。</li>
<li>那么通信的原理是怎样的了？</li>
<li>如果有两个页面 PageA 和 PageB，PageA  页面内嵌入 <code>iframe</code> PageB，那么理论上是应该可以实现双向通信的。</li>
</ul>
<p>其实非常简单，就是 PageA 通过 <code>window.postMessage()</code> 发送一个信息给 PageB，PageB 在 <code>window</code> 上添加一个事件监听绑定 <code>message</code> 事件可以接收到来自任何不同域名通过 <code>postMessage</code> 方法发送过来的信息，当 PageB 接收到 PageA 发送过来的信息时执行监听事件就 OK，在监听事件的 <code>event</code> 参数中包含了所有 <code>message</code> 事件接收到的相关数据。包括发送信息的内容 <code>event.data</code>，发送信息的域名 <code>event.origin</code> 等等。</p>
<p>同样的，在 PageA 内添加一个事件监听绑定 <code>message</code> 事件，在 PageB 内通过 <code>postMessage</code> 方法发送信息给 PageA 一样可以进行跨域通信。</p>
<h3 id="—-Tips-—-1"><a href="#—-Tips-—-1" class="headerlink" title="— Tips —"></a><em>— Tips —</em></h3><p><strong>我们可以通过 <code>event.origin</code> 来过滤掉来自其他未知站点发送过来的 <code>message</code> 事件信息，防止跨站攻击！</strong></p>
<p>大概就是以上的思考，然后继续写 Demo…</p>
<h2 id="———-干货代码-———"><a href="#———-干货代码-———" class="headerlink" title="——— 干货代码 ———"></a>——— 干货代码 ———</h2><h3 id="—-PageA-—"><a href="#—-PageA-—" class="headerlink" title="— PageA —"></a><em>— PageA —</em></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is Page A<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"openNewWindowBtn"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>Open New Window<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"postMessageBtn"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>Post Message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"receiverIframe"</span> <span class="attr">src</span>=<span class="string">"http://192.168.198.157:3000/pageB.html"</span> <span class="attr">frameborder</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"800"</span> <span class="attr">height</span>=<span class="string">"500"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">    window.onload = function() &#123;</div><div class="line">      var receiver = document.getElementById('receiverIframe').contentWindow;</div><div class="line">      var postBtn = document.getElementById('postMessageBtn');</div><div class="line">      var openBtn = document.getElementById('openNewWindowBtn');</div><div class="line">      var messageEle = document.getElementById('message');</div><div class="line"></div><div class="line">      function sendMessage() &#123;</div><div class="line">        receiver.postMessage('Hello Page B.. This is page A.. You are my iframe', 'http://192.168.198.157:3000');</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      function openNewWindow() &#123;</div><div class="line">        var pageB = window.open('http://192.168.198.157:3000/pageB.html');</div><div class="line"></div><div class="line">        setTimeout(function() &#123;</div><div class="line">          pageB.postMessage('Hello Page B.. This is Page A.. (form PageA window.open())', 'http://192.168.198.157:3000');</div><div class="line">        &#125;, 500)</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      function receiveMessage(event) &#123;</div><div class="line">        console.log(event);</div><div class="line"></div><div class="line">        if (event.origin !== 'http://192.168.198.157:3000') return;</div><div class="line"></div><div class="line">        messageEle.innerHTML = "Message Received: " + event.data;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      postBtn.addEventListener('click', sendMessage, false);</div><div class="line"></div><div class="line">      openBtn.addEventListener('click', openNewWindow, false);</div><div class="line"></div><div class="line">      window.addEventListener('message', receiveMessage, false);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="—-PageB-—"><a href="#—-PageB-—" class="headerlink" title="— PageB —"></a><em>— PageB —</em></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is Page B<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"postMessageBtn"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>Post Message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">    window.onload = function() &#123;</div><div class="line">      var postBtn = document.getElementById('postMessageBtn')</div><div class="line">      var messageEle = document.getElementById('message');</div><div class="line"></div><div class="line">      function receiveMessage(event) &#123;</div><div class="line">        console.log(event);</div><div class="line"></div><div class="line">        if (event.origin !== 'http://192.168.198.157:8000') return;</div><div class="line"></div><div class="line">        messageEle.innerHTML = "Message Received: " + event.data;</div><div class="line"></div><div class="line">        // 接收 PageA 的任何消息都自动回复并加上时间戳</div><div class="line">        event.source.postMessage('Hello Page A.. This is page B.. (from PageB autoreply) timestamp = ' + new Date().getTime(), event.origin);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      function sendMessage() &#123;</div><div class="line">        // 这里需要特别注意！！！</div><div class="line">        // 直接打开 PageB (当前页面) 是无法向 PageA 发送跨域信息的！！！</div><div class="line">        // 只有当 PageB (当前页面) 处于 PageA 页面内的 iframe 中的时候才能发送跨域信息 </div><div class="line">        // 而且此处不能使用 window.postMessage()</div><div class="line">        // 因为 PageB (当前页面) 是 PageA 页面内嵌入的 iframe</div><div class="line">        // 此时 PageB 的 window 指向的是 PageA 内 iframe 框架内的 window</div><div class="line">        // 而当前情况需要指向父级 window (即 top 或者 parent) 才能进行 postMessage</div><div class="line">        top.postMessage('Hello Page A.. This is page B..', 'http://192.168.198.157:8000');</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      postBtn.addEventListener('click', sendMessage, false);</div><div class="line"></div><div class="line">      window.addEventListener('message', receiveMessage, false);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="———-踩过的坑-———"><a href="#———-踩过的坑-———" class="headerlink" title="——— 踩过的坑 ———"></a>——— 踩过的坑 ———</h2><h3 id="—-PageB-需要特别注意的地方！！！-—"><a href="#—-PageB-需要特别注意的地方！！！-—" class="headerlink" title="— PageB 需要特别注意的地方！！！ —"></a><em>— PageB 需要特别注意的地方！！！ —</em></h3><ul>
<li><p>直接在浏览器中打开 PageB 页面是无法向 PageA 页面发送跨域信息的！！！</p>
</li>
<li><p>PageB 页面的 <code>receiveMessage</code> 方法自动回复了所有来自 PageA 页面的 <code>postMessage</code> 信息并且加上了时间戳。</p>
</li>
<li><p>为什么 PageB 页面内的 <code>sendMessage</code> 方法使用的是 <code>top.postMessage()</code> 发送跨域信息？？？</p>
<ul>
<li>答案就在下面的结论中</li>
</ul>
</li>
</ul>
<h3 id="—-Tips-—-2"><a href="#—-Tips-—-2" class="headerlink" title="— Tips —"></a><em>— Tips —</em></h3><p>如果不是使用 <code>window.open()</code> 打开的页面或者 <code>iframe</code> 嵌入的页面，就跟当前页面扯不上任何关系，是无法使用 <code>window.postMessage()</code> 进行跨域通信的！！！</p>
<p>描述的貌似不是很清楚，举个栗子：</p>
<ul>
<li><p>如果你打开浏览器，输入一个页面地址 PageA，然后打开一个新的标签页，又输入一个页面地址 PageB，那么这两个页面是无论如何都不能使用 <code>window.postMessage()</code> 来进行跨域通信的，他们并没有任何血缘关系…</p>
</li>
<li><p>同样，打开浏览器，输入一个页面地址 PageA，然后通过 PageA 动态打开 PageB (当然，不是通过 PageA 内的 <code>a</code> 标签链接打开)，或者 PageA 内嵌入了 <code>iframe</code> PageB，那么这个时候就厉害了，它两有血缘关系啦！PageB 这个时候是不是就相当于是 PageA 是崽崽？是因为有了 PageA，所以才有了 PageB 的出现。然后理所当然的，PageA 拥有了控制 PageB 的某些权限，其中就包括 <code>window.postMessage()</code>。</p>
</li>
</ul>
<h2 id="———-得出结论-———"><a href="#———-得出结论-———" class="headerlink" title="——— 得出结论 ———"></a>——— 得出结论 ———</h2><blockquote>
<p><code>window.postMessage()</code> 中的 <code>window</code> 到底是什么呢？</p>
</blockquote>
<p><strong>A：始终是你要通信的目标页面的 <code>window</code></strong></p>
<h3 id="—-PageA-页面内嵌入-iframe-PageB-页面-—"><a href="#—-PageA-页面内嵌入-iframe-PageB-页面-—" class="headerlink" title="— PageA 页面内嵌入 iframe PageB 页面 —"></a><em>— PageA 页面内嵌入 <code>iframe</code> PageB 页面 —</em></h3><ul>
<li><p>PageA 页面向 PageB 页面发送跨域信息，<code>window</code> 为 PageB 页面的 <code>window</code>，即 <code>iframe.contentWindow</code>。</p>
</li>
<li><p>PageB 页面向 PageA 页面发送跨域信息，<code>window</code> 为 PageA 页面的 <code>window</code>，即 <code>top</code> 或者 <code>parent</code>。</p>
</li>
</ul>
<h3 id="—-PageA-页面内代码使用-window-open-打开-PageB-页面-—"><a href="#—-PageA-页面内代码使用-window-open-打开-PageB-页面-—" class="headerlink" title="— PageA 页面内代码使用 window.open() 打开 PageB 页面 —"></a><em>— PageA 页面内代码使用 <code>window.open()</code> 打开 PageB 页面 —</em></h3><ul>
<li><p>PageA 页面向 PageB 页面发送跨域信息，<code>window</code> 为 <code>var pageB = window.open(&#39;http://192.168.197.157:3000/pageB.html&#39;)</code> 中的变量 pageB。</p>
</li>
<li><p>PageB 页面向 PageA 页面发送跨域信息，<code>window</code> 为</p>
</li>
<li><p>PageA 页面内在 <code>window.open()</code> 打开新页面的情况下是 <code>window.open()</code> 所赋值的那个变量 <code>var pageB = window.open(&#39;http://192.168.197.157:3000/pageB.html&#39;)</code> 中的 <code>pageB</code>。</p>
</li>
</ul>
<h2 id="———-最后最后-———"><a href="#———-最后最后-———" class="headerlink" title="——— 最后最后 ———"></a>——— 最后最后 ———</h2><p><strong>请无论如何在监听 <code>message</code> 事件的函数内对 <code>event.origin</code> 进行过滤，不然来自未知站点的 <code>window.postMessage()</code> 可以对你的站点为所欲为。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Develop Tools]]></title>
      <url>https://monine.github.io/2016/07/16/Develop-Tools/</url>
      <content type="html"><![CDATA[<ul>
<li><h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a><a href="https://www.google.com/chrome/browser/desktop/index.html" target="_blank" rel="external">Chrome</a></h3><blockquote>
<p>a fast, free web browser</p>
</blockquote>
<p>V8 引擎，你值得拥有~</p>
</li>
</ul>
<a id="more"></a>
<ul>
<li><h3 id="Chrome-Canary"><a href="#Chrome-Canary" class="headerlink" title="Chrome Canary"></a><a href="https://www.google.com/chrome/browser/canary.html" target="_blank" rel="external">Chrome Canary</a></h3><blockquote>
<p>on the bleeding edge of the web </p>
</blockquote>
<p>Chrome 金丝雀，其实就冲着它土豪金的外表觉着特有 B 格。</p>
</li>
<li><h3 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a><a href="https://www.sublimetext.com/" target="_blank" rel="external">Sublime Text</a></h3><blockquote>
<p>a sophisticated text editor for code, markup and prose</p>
</blockquote>
<p>唯一会用的 Code Editor</p>
</li>
<li><h3 id="Package-Control"><a href="#Package-Control" class="headerlink" title="Package Control"></a><a href="https://packagecontrol.io/" target="_blank" rel="external">Package Control</a></h3><blockquote>
<p>the Sublime Text package manager</p>
</blockquote>
<p>没有它，Sublime Text 只是半成品。</p>
<ul>
<li>Emmet</li>
<li>HTML5</li>
<li>jQuery</li>
<li>Alignment</li>
<li>BracketHighlighter</li>
<li>SublimeLinter</li>
<li>SublimeCodeIntel</li>
<li>Seti_UI<ul>
<li>“theme”: “Seti.sublime-theme”</li>
<li>“highlight_line”: true</li>
</ul>
</li>
<li>Base 16 Color Schemes<ul>
<li>“color_scheme”: “Packages/User/SublimeLinter/base16-eighties (SL).tmTheme”</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Git-for-windows"><a href="#Git-for-windows" class="headerlink" title="Git for windows"></a><a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git for windows</a></h3><blockquote>
<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p>
</blockquote>
<p><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git 教程 - 廖雪峰</a></p>
</li>
<li><h3 id="Node-js、Node-js-中文"><a href="#Node-js、Node-js-中文" class="headerlink" title="Node.js、Node.js 中文"></a><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>、<a href="http://nodejs.cn/" target="_blank" rel="external">Node.js 中文</a></h3><blockquote>
<p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>
</blockquote>
</li>
<li><h3 id="Puer"><a href="#Puer" class="headerlink" title="Puer"></a><a href="http://leeluolee.github.io/2014/10/24/use-puer-helpus-developer-frontend/" target="_blank" rel="external">Puer</a></h3><blockquote>
<p>一个可以实时编辑刷新的前端服务器</p>
</blockquote>
<p>Code Editor 中 <code>Ctrl + s</code> 保存文件，页面立即同步刷新。</p>
</li>
<li><h3 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a><a href="http://www.telerik.com/fiddler" target="_blank" rel="external">Fiddler</a></h3><blockquote>
<p>The free web debugging proxy for any browser, system or platform</p>
</blockquote>
<p>与后端接口打交道，经常要用来截包查看数据。(主要针对移动端)<br>还可以用来模拟/修改请求，我用来干过坏事 h-h<br><a href="http://note.youdao.com/yws/public/redirect/share?id=61022f8971604bd58f0ddcf3df070ced&amp;type=false" target="_blank" rel="external">Fiddler 使用简介</a></p>
</li>
<li><h3 id="Rosin"><a href="#Rosin" class="headerlink" title="Rosin"></a><a href="http://alloyteam.github.io/Rosin/" target="_blank" rel="external">Rosin</a></h3><blockquote>
<p>A tool for web developers debug mobile page with fiddler</p>
</blockquote>
<p>Fiddler 的好基友，主要用来查看控制台输出信息。(移动端)</p>
</li>
<li><h3 id="微信-web-开发者工具"><a href="#微信-web-开发者工具" class="headerlink" title="微信 web 开发者工具"></a><a href="https://mp.weixin.qq.com/wiki/10/e5f772f4521da17fa0d7304f68b97d7e.html" target="_blank" rel="external">微信 web 开发者工具</a></h3><blockquote>
<p>为帮助开发者更方便、更安全地开发和调试基于微信的网页，我们推出了 web 开发者工具。它是一个桌面应用，通过模拟微信客户端的表现，使得开发者可以使用这个工具方便地在 PC 或者 Mac 上进行开发和调试工作。</p>
</blockquote>
<p>主要用来开发需要微信授权的页面，可以拿到微信用户信息进行调试。</p>
</li>
<li><h3 id="SVGO"><a href="#SVGO" class="headerlink" title="SVGO"></a><a href="http://note.youdao.com/yws/public/redirect/share?id=61022f8971604bd58f0ddcf3df070ced&amp;type=false" target="_blank" rel="external">SVGO</a></h3><blockquote>
<p>SVG Optimizer is a Nodejs-based tool for optimizing SVG vector graphics files. </p>
</blockquote>
<p>SVG 精简压缩，删除无用信息。</p>
</li>
<li><h3 id="Beyond-Compare"><a href="#Beyond-Compare" class="headerlink" title="Beyond Compare"></a><a href="http://www.scootersoftware.com/index.php" target="_blank" rel="external">Beyond Compare</a></h3><blockquote>
<p>Beyond Compare is focused.  Beyond Compare allows you to quickly and easily compare your files and folders.  By using simple, powerful commands you can focus on the differences you’re interested in and ignore those you’re not.  You can then merge the changes, synchronize your files, and generate reports for your records.</p>
</blockquote>
<p>代码对比工具，我只会九牛一毛 e-e</p>
</li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
